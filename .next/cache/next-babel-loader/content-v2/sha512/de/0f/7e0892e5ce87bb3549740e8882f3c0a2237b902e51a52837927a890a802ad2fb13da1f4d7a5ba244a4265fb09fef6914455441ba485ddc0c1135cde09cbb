{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\QSS\\\\Desktop\\\\Projects\\\\NextJs\\\\small project\\\\pages\\\\[meetupid]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await new MongoClient(\"mongodb+srv://ayush:ayush@cluster0.iqtihnr.mongodb.net/meetups\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupid: meetup._id.toString()\n      }\n    })),\n    fallback: true\n  };\n}\nexport async function getStaticProps(context) {\n  const {\n    meetupid\n  } = context.params;\n  const client = await new MongoClient(\"mongodb+srv://ayush:ayush@cluster0.iqtihnr.mongodb.net/meetups\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.findOne({\n    _id: ObjectId(meetupid)\n  });\n  console.log(meetups);\n  client.close();\n  return {\n    props: {\n      meetupData: meetups\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/QSS/Desktop/Projects/NextJs/small project/pages/[meetupid]/index.js"],"names":["React","Fragment","useRouter","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","db","meetupsCollection","collection","meetups","find","toArray","close","paths","map","meetup","params","meetupid","_id","toString","fallback","getStaticProps","context","findOne","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAM,IAAIV,WAAJ,CACnB,gEADmB,CAArB;AAIA,QAAMW,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2BC,OAA3B,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACG,GAAP,CAAWC,QAAX;AAAZ;AADsB,KAAb,CAAZ,CADF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAM;AAAEL,IAAAA;AAAF,MAAeK,OAAO,CAACN,MAA7B;AAEA,QAAMX,MAAM,GAAG,MAAM,IAAIV,WAAJ,CACnB,gEADmB,CAArB;AAIA,QAAMW,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEL,IAAAA,GAAG,EAAEtB,QAAQ,CAACqB,QAAD;AAAf,GAA1B,CAAtB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AAEAJ,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEU;AADP;AADF,GAAP;AAKD;AAED,eAAeZ,aAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      img={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await new MongoClient(\r\n    \"mongodb+srv://ayush:ayush@cluster0.iqtihnr.mongodb.net/meetups\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupid: meetup._id.toString() },\r\n    })),\r\n    fallback: true,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const { meetupid } = context.params;\r\n\r\n  const client = await new MongoClient(\r\n    \"mongodb+srv://ayush:ayush@cluster0.iqtihnr.mongodb.net/meetups\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.findOne({ _id: ObjectId(meetupid) });\r\n  console.log(meetups);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: meetups,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}